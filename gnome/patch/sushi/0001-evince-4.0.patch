diff --git a/meson.build b/meson.build
index 5b181a5..e56e9c0 100644
--- a/meson.build
+++ b/meson.build
@@ -6,8 +6,8 @@ project(
 )
 
 epoxy_dep = dependency('epoxy')
-evince_document_dep = dependency('evince-document-3.0')
-evince_view_dep = dependency('evince-view-3.0')
+evince_document_dep = dependency('evince-document-4.0')
+evince_view_dep = dependency('evince-view-4.0')
 freetype_dep = dependency('freetype2')
 gdk_pixbuf_dep = dependency('gdk-pixbuf-2.0', version: '>=2.23.0')
 gio_unix_dep = dependency('gio-unix-2.0', version: '>=2.29.14')

diff --git a/src/libsushi/sushi-utils.c b/src/libsushi/sushi-utils.c
index 77fb64e..d31c3e9 100644
--- a/src/libsushi/sushi-utils.c
+++ b/src/libsushi/sushi-utils.c
@@ -81,28 +81,35 @@ sushi_get_evince_document_from_job (EvJob   *job,
 gchar **
 sushi_query_supported_document_types (void)
 {
-  GList *infos, *l;
+  GList *pages, *l;
   gchar **retval = NULL;
   GPtrArray *array;
-  EvTypeInfo *info;
+  EvBackendPage *page;
   gint idx;
 
-  infos = ev_backends_manager_get_all_types_info ();
+  // Assuming ev_backends_manager_get_all_backend_pages() returns a GList of EvBackendPage
+  pages = ev_backends_manager_get_all_backend_pages();
 
-  if (infos == NULL)
+  if (pages == NULL)
     return NULL;
 
-  array = g_ptr_array_new ();
+  array = g_ptr_array_new();
 
-  for (l = infos; l != NULL; l = l->next) {
-    info = l->data;
+  // Iterate over each EvBackendPage in the list
+  for (l = pages; l != NULL; l = l->next) {
+    page = l->data;
 
-    for (idx = 0; info->mime_types[idx] != NULL; idx++)
-      g_ptr_array_add (array, g_strdup (info->mime_types[idx]));
+    // Assuming EvBackendPage has a mime_types array like EvTypeInfo
+    for (idx = 0; page->mime_types[idx] != NULL; idx++) {
+      g_ptr_array_add(array, g_strdup(page->mime_types[idx]));
+    }
   }
 
-  g_ptr_array_add (array, NULL);
-  retval = (gchar **) g_ptr_array_free (array, FALSE);
+  g_ptr_array_add(array, NULL);  // Add NULL to terminate the array
+  retval = (gchar **) g_ptr_array_free(array, FALSE);  // Return the array
+
+  // Free the GList of EvBackendPage structures
+  g_list_free_full(pages, (GDestroyNotify) ev_backend_page_free);
 
   return retval;
 }
